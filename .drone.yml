kind: pipeline
name: default

steps:
  - name: setup
    image: node:11
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - cd client
      - npm install

  - name: build
    image: node:11
    volumes:
      - name: cache
        path: /tmp/cache
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - cd client
      - npm run build
  - name: publish-backend
    image: plugins/docker
    secrets: [docker_username, docker_password, sentry_dsn]
    when:
      event: push
      branch: master
      status: success
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: registry.online.ntnu.no/dotkom/techtalks2/backend
      registry: registry.online.ntnu.no
      dockerfile: docker/production/Dockerfile.backend
      auto_tag: true
  - name: publish-frontend
    image: plugins/docker
    secrets: [docker_username, docker_password, sentry_dsn]
    when:
      event: push
      branch: master
      status: success
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: registry.online.ntnu.no/dotkom/techtalks2/frontend
      registry: registry.online.ntnu.no
      dockerfile: docker/production/Dockerfile.nginx
      auto_tag: true
# TODO deploy! :D
# client/build må lastes opp og serveres med nginx satt opp for å servere react
# Jeg har skrevet nginx for å anta at den ligger i ../../client/build, bare for at det er lettere å teste lokalt
# api også
# se docker/production/docker-compose.yml, bruk gjerne den

volumes:
  - name: cache
    host:
      path: /opt/drone/cache
